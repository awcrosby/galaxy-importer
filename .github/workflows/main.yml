name: CI

# Controls when the action will run. 
on:
  pull_request:
  push:
    branches:
      - '**'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.6']
        # python-version: ['3.6', '3.7', '3.8']

    steps:
    # - uses: actions/checkout@v2
    - name: Checkout pull request HEAD commit instead of merge commit
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Check commit (on pull requests?) for issue references
      if: github.event_name == 'pull_request'
      env:
        GITHUB_PR_COMMITS_URL: ${{ github.event.pull_request.commits_url }}
      run: sh .github/scripts/check_commit.sh

    - name: Install source package and dependencies
      run: |
        python -m pip install -e .[dev] 

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Pytest unit tests
      run: |
        make test

    # - name: Integration test
    #   run: |
    #     make test/integration


  publish:
    name: Build and publish to PyPI registry
    if: startsWith(github.ref, 'refs/tags')
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: pip install build
      run: |
        python -m pip install build --user

    - name: Build a binary wheel and a source tarball
      run: |
        python -m build --sdist --wheel --outdir dist/ .

    # TODO: see if can use version dev-datetime as env var and publish to test pypi?
    - name: Publish TEST PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.test_pypi_password }}
        repository_url: https://test.pypi.org/legacy/

    # - name: Publish to PyPI
    #   uses: pypa/gh-action-pypi-publish@master
    #   with:
    #     password: ${{ secrets.pypi_password }}
