name: ci-steps

# on: push
on: [push, pull_request]
# on:
#   push:
#     branches: [ $default-branch ]
#   pull_request:
#     branches: [ $default-branch ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.6']
        # python-version: ['3.6', '3.7', '3.8']

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install source package and dependencies
      run: |
        python -m pip install -e .[dev] 

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Pytest unit tests
      run: |
        make test

    - name: Integration test
      run: |
        make test/integration


  build-and-publish:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: pip install build
      run: |
        python -m pip install build --user

    - name: Build a binary wheel and a source tarball
      run: |
        python -m build --sdist --wheel --outdir dist/ .

    - name: Publish distribution to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.test_pypi_password }}
        repository_url: https://test.pypi.org/legacy/

    # - name: Publish distribution to PyPI
    #   if: startsWith(github.ref, 'refs/tags')
    #   uses: pypa/gh-action-pypi-publish@master
    #   with:
    #     password: ${{ secrets.pypi_password }}

    
    
    
    # # Name the Job
    # name: Lint code base
    # # Set the type of machine to run on
    # runs-on: ubuntu-latest
    # 
    # steps:
    #   # Checks out a copy of your repository on the ubuntu-latest machine
    #   - name: Checkout code
    #     uses: actions/checkout@v2
    # 
    #   # Runs the Super-Linter action
    #   - name: Run Super-Linter
    #     uses: github/super-linter@v3
    #     env:
    #       DEFAULT_BRANCH: master
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}